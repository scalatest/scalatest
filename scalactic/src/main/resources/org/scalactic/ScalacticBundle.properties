bigProblems=An exception or error caused a run to abort. 
didNotEqual={0} did not equal {1}
equaled={0} equaled {1}
wasPlusOrMinus={0} was {1} plus or minus {2}
wasNotPlusOrMinus={0} was not {1} plus or minus {2}
expressionWasFalse=Expression was false
expressionWasTrue=Expression was true
wasNull={0} was null
wereNull={0} were null
comma=,\u0020
and={0} and {1}
wasTrue={0} was true
wasFalse={0} was false
wasLessThan={0} was less than {1}
wasNotLessThan={0} was not less than {1}
wasGreaterThan={0} was greater than {1}
wasNotGreaterThan={0} was not greater than {1}
wasLessThanOrEqualTo={0} was less than or equal to {1}
wasNotLessThanOrEqualTo={0} was not less than or equal to {1}
wasGreaterThanOrEqualTo={0} was greater than or equal to {1}
wasNotGreaterThanOrEqualTo={0} was not greater than or equal to {1}
didNotStartWith={0} did not start with {1}
startedWith={0} started with {1}
didNotEndWith={0} did not end with {1}
endedWith={0} ended with {1}
didNotContain={0} did not contain {1}
contained={0} contained {1}
didNotContainKey={0} did not contain key {1}
containedKey={0} contained key {1}
wasTheSameInstanceAs={0} was the same instance as {1}
wasNotTheSameInstanceAs={0} was not the same instance as {1}
wasNotEmpty={0} was not empty
wasEmpty={0} was empty
wasNotInstanceOf={0} was not instance of {1}
wasInstanceOf={0} was instance of {1}
hadLengthInsteadOfExpectedLength={0} had length {1} instead of expected length {2}
hadLength={0} had length {1}
hadSizeInsteadOfExpectedSize={0} had size {1} instead of expected size {2}
hadSize={0} had size {1}
commaBut={0}, but {1}
commaAnd={0}, and {1}
variableWasValue={0} was {1}
notValidPosInt=PosInt.apply can only be invoked on a positive (i > 0) integer literal, like PosInt(42).
notLiteralPosInt=PosInt.apply can only be invoked on an integer literal, like PosInt(42). Please use PosInt.from instead.
notValidPosLong=PosLong.apply can only be invoked on a positive (i > 0L) integer literal, like PosLong(42L).
notLiteralPosLong=PosLong.apply can only be invoked on an integer literal, like PosLong(42L). Please use PosLong.from instead.
notValidPosFloat=PosFloat.apply can only be invoked on a positive (i > 0.0F) floating point literal, like PosFloat(42.0F).
notLiteralPosFloat=PosFloat.apply can only be invoked on a floating point literal, like PosFloat(42.0F). Please use PosFloat.from instead.
notValidPosDouble=PosDouble.apply can only be invoked on a positive (i > 0.0) floating point literal, like PosDouble(42.0).
notLiteralPosDouble=PosDouble.apply can only be invoked on a floating point literal, like PosDouble(42.0). Please use PosDouble.from instead.
notValidPozInt=PozInt.apply can only be invoked on a non-negative (i >= 0) integer literal, like PozInt(42).
notLiteralPozInt=PozInt.apply can only be invoked on an integer literal, like PozInt(42). Please use PozInt.from instead.
notValidPozLong=PozLong.apply can only be invoked on a non-negative (i >= 0L) integer literal, like PozLong(42L).
notLiteralPozLong=PozLong.apply can only be invoked on an integer literal, like PozLong(42L). Please use PozLong.from instead.
notValidPozFloat=PozFloat.apply can only be invoked on a non-negative (i >= 0.0F) floating point literal, like PozFloat(42.0F).
notLiteralPozFloat=PozFloat.apply can only be invoked on a floating point literal, like PozFloat(42.0F). Please use PozFloat.from instead.
notValidPozDouble=PozDouble.apply can only be invoked on a non-negative (i >= 0.0) floating point literal, like PozDouble(42.0).
notLiteralPozDouble=PozDouble.apply can only be invoked on a floating point literal, like PozDouble(42.0). Please use PozDouble.from instead.
